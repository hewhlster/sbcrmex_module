<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.fjh.dao.OptLogMapper">
    <resultMap id="BaseResultMap" type="org.fjh.entity.OptLog">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="url" jdbcType="VARCHAR" property="url"/>
        <result column="ip" jdbcType="VARCHAR" property="ip"/>
        <result column="user" jdbcType="VARCHAR" property="user"/>
        <result column="date" jdbcType="TIMESTAMP" property="date"/>
        <result column="ret" jdbcType="VARCHAR" property="ret"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="org.fjh.entity.OptLog">
        <result column="datas" jdbcType="LONGVARCHAR" property="datas"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, url, ip, user, date, ret
  </sql>
    <sql id="Blob_Column_List">
    datas
  </sql>
    <select id="selectByExampleWithBLOBs" parameterType="org.fjh.entity.OptLogExample" resultMap="ResultMapWithBLOBs">
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from tbl_opt_log
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" parameterType="org.fjh.entity.OptLogExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List"/>
        from tbl_opt_log
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from tbl_opt_log
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tbl_opt_log
    where id = #{id,jdbcType=VARCHAR}
  </delete>
    <delete id="deleteByExample" parameterType="org.fjh.entity.OptLogExample">
        delete from tbl_opt_log
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="org.fjh.entity.OptLog">
    insert into tbl_opt_log (id, url, ip, 
      user, date, ret, 
      datas)
    values (#{id,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, #{ip,jdbcType=VARCHAR}, 
      #{user,jdbcType=VARCHAR}, #{date,jdbcType=TIMESTAMP}, #{ret,jdbcType=VARCHAR}, 
      #{datas,jdbcType=LONGVARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="org.fjh.entity.OptLog">
        insert into tbl_opt_log
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="url != null">
                url,
            </if>
            <if test="ip != null">
                ip,
            </if>
            <if test="user != null">
                user,
            </if>
            <if test="date != null">
                date,
            </if>
            <if test="ret != null">
                ret,
            </if>
            <if test="datas != null">
                datas,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="url != null">
                #{url,jdbcType=VARCHAR},
            </if>
            <if test="ip != null">
                #{ip,jdbcType=VARCHAR},
            </if>
            <if test="user != null">
                #{user,jdbcType=VARCHAR},
            </if>
            <if test="date != null">
                #{date,jdbcType=TIMESTAMP},
            </if>
            <if test="ret != null">
                #{ret,jdbcType=VARCHAR},
            </if>
            <if test="datas != null">
                #{datas,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="org.fjh.entity.OptLogExample" resultType="java.lang.Long">
        select count(*) from tbl_opt_log
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update tbl_opt_log
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=VARCHAR},
            </if>
            <if test="record.url != null">
                url = #{record.url,jdbcType=VARCHAR},
            </if>
            <if test="record.ip != null">
                ip = #{record.ip,jdbcType=VARCHAR},
            </if>
            <if test="record.user != null">
                user = #{record.user,jdbcType=VARCHAR},
            </if>
            <if test="record.date != null">
                date = #{record.date,jdbcType=TIMESTAMP},
            </if>
            <if test="record.ret != null">
                ret = #{record.ret,jdbcType=VARCHAR},
            </if>
            <if test="record.datas != null">
                datas = #{record.datas,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        update tbl_opt_log
        set id = #{record.id,jdbcType=VARCHAR},
        url = #{record.url,jdbcType=VARCHAR},
        ip = #{record.ip,jdbcType=VARCHAR},
        user = #{record.user,jdbcType=VARCHAR},
        date = #{record.date,jdbcType=TIMESTAMP},
        ret = #{record.ret,jdbcType=VARCHAR},
        datas = #{record.datas,jdbcType=LONGVARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update tbl_opt_log
        set id = #{record.id,jdbcType=VARCHAR},
        url = #{record.url,jdbcType=VARCHAR},
        ip = #{record.ip,jdbcType=VARCHAR},
        user = #{record.user,jdbcType=VARCHAR},
        date = #{record.date,jdbcType=TIMESTAMP},
        ret = #{record.ret,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="org.fjh.entity.OptLog">
        update tbl_opt_log
        <set>
            <if test="url != null">
                url = #{url,jdbcType=VARCHAR},
            </if>
            <if test="ip != null">
                ip = #{ip,jdbcType=VARCHAR},
            </if>
            <if test="user != null">
                user = #{user,jdbcType=VARCHAR},
            </if>
            <if test="date != null">
                date = #{date,jdbcType=TIMESTAMP},
            </if>
            <if test="ret != null">
                ret = #{ret,jdbcType=VARCHAR},
            </if>
            <if test="datas != null">
                datas = #{datas,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="org.fjh.entity.OptLog">
    update tbl_opt_log
    set url = #{url,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=VARCHAR},
      user = #{user,jdbcType=VARCHAR},
      date = #{date,jdbcType=TIMESTAMP},
      ret = #{ret,jdbcType=VARCHAR},
      datas = #{datas,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
    <update id="updateByPrimaryKey" parameterType="org.fjh.entity.OptLog">
    update tbl_opt_log
    set url = #{url,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=VARCHAR},
      user = #{user,jdbcType=VARCHAR},
      date = #{date,jdbcType=TIMESTAMP},
      ret = #{ret,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>

    <select id="listPage" resultMap="BaseResultMap">
        select *from tbl_opt_log
        <where>
            <if test="params!=null">
                <foreach collection="params.keys" item="key" separator="and">
                    <if test="params[key]!=null">
                        ${key} like concat("%",#{params[${key}]},"%")
                    </if>
                </foreach>
            </if>
        </where>
        order by date
    </select>

</mapper>