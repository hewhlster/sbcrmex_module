<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.fjh.dao.ResourceMapper">
    <resultMap id="BaseResultMap" type="org.fjh.entity.Resource">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="createdate" jdbcType="TIMESTAMP" property="createdate"/>
        <result column="updatedate" jdbcType="TIMESTAMP" property="updatedate"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="url" jdbcType="VARCHAR" property="url"/>
        <result column="pid" jdbcType="VARCHAR" property="pid"/>
        <result column="gnum" jdbcType="INTEGER" property="gnum"/>
        <result column="valid" jdbcType="INTEGER" property="valid"/>
        <result column="type" jdbcType="INTEGER" property="type"/>
        <result column="level" jdbcType="INTEGER" property="level"/>
        <result column="icon" jdbcType="VARCHAR" property="icon"/>
        <result column="memo" jdbcType="VARCHAR" property="memo"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, createdate, updatedate, name, url, pid, gnum, valid, type, level, icon, memo
  </sql>
    <select id="selectByExample" parameterType="org.fjh.entity.ResourceExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List"/>
        from tbl_resource
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tbl_resource
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tbl_resource
    where id = #{id,jdbcType=VARCHAR}
  </delete>
    <delete id="deleteByExample" parameterType="org.fjh.entity.ResourceExample">
        delete from tbl_resource
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="org.fjh.entity.Resource">
    insert into tbl_resource (id, createdate, updatedate, 
      name, url, pid, gnum, 
      valid, type, level, 
      icon, memo)
    values (#{id,jdbcType=VARCHAR}, #{createdate,jdbcType=TIMESTAMP}, #{updatedate,jdbcType=TIMESTAMP}, 
      #{name,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, #{pid,jdbcType=VARCHAR}, #{gnum,jdbcType=INTEGER}, 
      #{valid,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{level,jdbcType=INTEGER}, 
      #{icon,jdbcType=VARCHAR}, #{memo,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="org.fjh.entity.Resource">
        insert into tbl_resource
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="createdate != null">
                createdate,
            </if>
            <if test="updatedate != null">
                updatedate,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="url != null">
                url,
            </if>
            <if test="pid != null">
                pid,
            </if>
            <if test="gnum != null">
                gnum,
            </if>
            <if test="valid != null">
                valid,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="level != null">
                level,
            </if>
            <if test="icon != null">
                icon,
            </if>
            <if test="memo != null">
                memo,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="createdate != null">
                #{createdate,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedate != null">
                #{updatedate,jdbcType=TIMESTAMP},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="url != null">
                #{url,jdbcType=VARCHAR},
            </if>
            <if test="pid != null">
                #{pid,jdbcType=VARCHAR},
            </if>
            <if test="gnum != null">
                #{gnum,jdbcType=INTEGER},
            </if>
            <if test="valid != null">
                #{valid,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                #{type,jdbcType=INTEGER},
            </if>
            <if test="level != null">
                #{level,jdbcType=INTEGER},
            </if>
            <if test="icon != null">
                #{icon,jdbcType=VARCHAR},
            </if>
            <if test="memo != null">
                #{memo,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="org.fjh.entity.ResourceExample" resultType="java.lang.Long">
        select count(*) from tbl_resource
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update tbl_resource
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=VARCHAR},
            </if>
            <if test="record.createdate != null">
                createdate = #{record.createdate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updatedate != null">
                updatedate = #{record.updatedate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.url != null">
                url = #{record.url,jdbcType=VARCHAR},
            </if>
            <if test="record.pid != null">
                pid = #{record.pid,jdbcType=VARCHAR},
            </if>
            <if test="record.gnum != null">
                gnum = #{record.gnum,jdbcType=INTEGER},
            </if>
            <if test="record.valid != null">
                valid = #{record.valid,jdbcType=INTEGER},
            </if>
            <if test="record.type != null">
                type = #{record.type,jdbcType=INTEGER},
            </if>
            <if test="record.level != null">
                level = #{record.level,jdbcType=INTEGER},
            </if>
            <if test="record.icon != null">
                icon = #{record.icon,jdbcType=VARCHAR},
            </if>
            <if test="record.memo != null">
                memo = #{record.memo,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update tbl_resource
        set id = #{record.id,jdbcType=VARCHAR},
        createdate = #{record.createdate,jdbcType=TIMESTAMP},
        updatedate = #{record.updatedate,jdbcType=TIMESTAMP},
        name = #{record.name,jdbcType=VARCHAR},
        url = #{record.url,jdbcType=VARCHAR},
        pid = #{record.pid,jdbcType=VARCHAR},
        gnum = #{record.gnum,jdbcType=INTEGER},
        valid = #{record.valid,jdbcType=INTEGER},
        type = #{record.type,jdbcType=INTEGER},
        level = #{record.level,jdbcType=INTEGER},
        icon = #{record.icon,jdbcType=VARCHAR},
        memo = #{record.memo,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="org.fjh.entity.Resource">
        update tbl_resource
        <set>
            <if test="createdate != null">
                createdate = #{createdate,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedate != null">
                updatedate = #{updatedate,jdbcType=TIMESTAMP},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="url != null">
                url = #{url,jdbcType=VARCHAR},
            </if>
            <if test="pid != null">
                pid = #{pid,jdbcType=VARCHAR},
            </if>
            <if test="gnum != null">
                gnum = #{gnum,jdbcType=INTEGER},
            </if>
            <if test="valid != null">
                valid = #{valid,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=INTEGER},
            </if>
            <if test="level != null">
                level = #{level,jdbcType=INTEGER},
            </if>
            <if test="icon != null">
                icon = #{icon,jdbcType=VARCHAR},
            </if>
            <if test="memo != null">
                memo = #{memo,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="org.fjh.entity.Resource">
    update tbl_resource
    set createdate = #{createdate,jdbcType=TIMESTAMP},
      updatedate = #{updatedate,jdbcType=TIMESTAMP},
      name = #{name,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      pid = #{pid,jdbcType=VARCHAR},
      gnum = #{gnum,jdbcType=INTEGER},
      valid = #{valid,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      level = #{level,jdbcType=INTEGER},
      icon = #{icon,jdbcType=VARCHAR},
      memo = #{memo,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>






    <select id="selectByApid" parameterType="java.lang.String"
            resultMap="BaseResultMap">
		select *
		from tbl_resource
		where apid=#{apid} order by anum
	</select>

    <!-- 得到角色对应的资源 -->
    <select id="selectResourceByRid" resultMap="BaseResultMap">
		SELECT
          `tbl_resource`.`id`,
          `tbl_resource`.`createdate`,
          `tbl_resource`.`updatedate`,
          `tbl_resource`.`name`,
          `tbl_resource`.`url`,
          `tbl_resource`.`pid`,
          `tbl_resource`.`gnum`,
          `tbl_resource`.`valid`,
          `tbl_resource`.`type`,
          `tbl_resource`.`level`,
          `tbl_resource`.`icon`,
          `tbl_resource`.`memo`,
          `tbl_resource`.`pid` AS parentid
        FROM
          `tbl_role_resource`
          INNER JOIN `tbl_role`
            ON (
              `tbl_role_resource`.`rid` = `tbl_role`.`id`
            )
          INNER JOIN `tbl_resource`
            ON (
              `tbl_role_resource`.`aid` = `tbl_resource`.`id`
            )
        WHERE (`tbl_resource`.`type` = 1)
          AND (
            `tbl_role`.`id` = #{rid}
          )
        ORDER BY `tbl_resource`.`gnum`
	</select>


    <select id="selectAllResource" resultMap="BaseResultMap">
		SELECT
          *
		FROM
		`tbl_resource`
		ORDER BY `tbl_resource`.`gnum`
	</select>

    <select id="getTotal" resultType="integer">
        select count(*) from tbl_resource
        <where>
            <if test="params!=null">
                <foreach collection="params.keys" item="key" separator="and">
                    <if test="params[key]!=null">
                        ${key}=#{params[${key}]}
                    </if>
                </foreach>
            </if>
        </where>
    </select>

    <select id="pager" resultMap="BaseResultMap">
        select *from tbl_resource
        <where>
            <if test="params!=null">
                <foreach collection="params.keys" item="key" separator="and">
                    <if test="params[key]!=null">
                        ${key} like concat("%",#{params[${key}]},"%")
                    </if>
                </foreach>
            </if>
        </where>
        order by pid
        limit ${start},${end}
    </select>

    <delete id="deleteByPidKey">
		delete from tbl_resource where apid=#{id}
	</delete>



    <select id="selectResourceByRidEx" resultType="HashMap">
		SELECT
		    `tbl_role_resource`.`rid` rid
		    , `tbl_resource`.`id`
		    , `tbl_resource`.`name`
		    , `tbl_resource`.`url`
		    , `tbl_resource`.`pid`
		    , `tbl_resource`.`gnum`
		    , `tbl_resource`.`valid`
		    , `tbl_resource`.`type`
		    , `tbl_resource`.`level`
		    , `tbl_resource`.`icon`
		    , `tbl_resource`.`createdate`
		    , `tbl_resource`.`updatedate`

		FROM
		    `tbl_role_resource`
		    RIGHT  JOIN `tbl_resource`
		        ON (`tbl_role_resource`.`aid` = `tbl_resource`.`id`)
		AND (`tbl_role_resource`.`rid` =#{rid}) ORDER BY `tbl_resource`.`gnum`;
	</select>

</mapper>